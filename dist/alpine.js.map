{"version":3,"file":"alpine.js","sources":["../src/utils.js","../src/directives/for.js","../src/directives/bind.js","../src/directives/if.js","../src/directives/on.js","../src/directives/model.js","../src/component.js","../src/directives/show.js","../src/directives/else.js","../src/index.js"],"sourcesContent":["\n// Thanks @stimulus:\n// https://github.com/stimulusjs/stimulus/blob/master/packages/%40stimulus/core/src/application.ts\nexport function domReady() {\n    return new Promise(resolve => {\n        if (document.readyState == \"loading\") {\n            document.addEventListener(\"DOMContentLoaded\", resolve)\n        } else {\n            resolve()\n        }\n    })\n}\n\nexport function arrayUnique(array) {\n    var a = array.concat();\n    for(var i=0; i<a.length; ++i) {\n        for(var j=i+1; j<a.length; ++j) {\n            if(a[i] === a[j])\n                a.splice(j--, 1);\n        }\n    }\n\n    return a;\n}\n\nexport function isTesting() {\n    return navigator.userAgent, navigator.userAgent.includes(\"Node.js\")\n        || navigator.userAgent.includes(\"jsdom\")\n}\n\nexport function kebabCase(subject) {\n    return subject.replace(/([a-z])([A-Z])/g, '$1-$2').replace(/[_\\s]/, '-').toLowerCase()\n}\n\nexport function walk(el, callback) {\n    if (callback(el) === false) return\n\n    let node = el.firstElementChild\n\n    while (node) {\n        walk(node, callback)\n\n        node = node.nextElementSibling\n    }\n}\n\nexport function debounce(func, wait) {\n    var timeout\n    return function () {\n        var context = this, args = arguments\n        var later = function () {\n            timeout = null\n            func.apply(context, args)\n        }\n        clearTimeout(timeout)\n        timeout = setTimeout(later, wait)\n    }\n}\n\nexport function saferEval(expression, dataContext, additionalHelperVariables = {}) {\n    return (new Function(['$data', ...Object.keys(additionalHelperVariables)], `var result; with($data) { result = ${expression} }; return result`))(\n        dataContext, ...Object.values(additionalHelperVariables)\n    )\n}\n\nexport function saferEvalNoReturn(expression, dataContext, additionalHelperVariables = {}) {\n    return (new Function(['dataContext', ...Object.keys(additionalHelperVariables)], `with(dataContext) { ${expression} }`))(\n        dataContext, ...Object.values(additionalHelperVariables)\n    )\n}\n\nexport function isXAttr(attr) {\n    const name = replaceAtAndColonWithStandardSyntax(attr.name)\n\n    const xAttrRE = /x-(on|bind|data|text|html|model|if|else|for|show|cloak|transition|ref)/\n\n    return xAttrRE.test(name)\n}\n\nexport function getXAttrs(el, type) {\n    return Array.from(el.attributes)\n        .filter(isXAttr)\n        .map(attr => {\n            const name = replaceAtAndColonWithStandardSyntax(attr.name)\n\n            const typeMatch = name.match(/x-(on|bind|data|text|html|model|if|for|else|show|cloak|transition|ref)/)\n            const valueMatch = name.match(/:([a-zA-Z\\-:]+)/)\n            const modifiers = name.match(/\\.[^.\\]]+(?=[^\\]]*$)/g) || []\n\n            return {\n                type: typeMatch ? typeMatch[1] : null,\n                value: valueMatch ? valueMatch[1] : null,\n                modifiers: modifiers.map(i => i.replace('.', '')),\n                expression: attr.value,\n            }\n        })\n        .filter(i => {\n            // If no type is passed in for filtering, bypassfilter\n            if (! type) return true\n\n            return i.type === type\n        })\n}\n\nexport function replaceAtAndColonWithStandardSyntax(name) {\n    if (name.startsWith('@')) {\n        return name.replace('@', 'x-on:')\n    } else if (name.startsWith(':')) {\n        return name.replace(':', 'x-bind:')\n    }\n\n    return name\n}\n\nexport function transitionIn(el, callback, forceSkip = false) {\n    if (forceSkip) return callback()\n\n    const attrs = getXAttrs(el, 'transition')\n\n    if (attrs.length < 1) return callback()\n\n    const enter = (attrs.find(i => i.value === 'enter') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n    const enterStart = (attrs.find(i => i.value === 'enter-start') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n    const enterEnd = (attrs.find(i => i.value === 'enter-end') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n\n    transition(el, enter, enterStart, enterEnd, callback, () => {})\n}\n\nexport function transitionOut(el, callback, forceSkip = false) {\n    if (forceSkip) return callback()\n\n    const attrs = getXAttrs(el, 'transition')\n\n    if (attrs.length < 1) return callback()\n\n    const leave = (attrs.find(i => i.value === 'leave') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n    const leaveStart = (attrs.find(i => i.value === 'leave-start') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n    const leaveEnd = (attrs.find(i => i.value === 'leave-end') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n\n    transition(el, leave, leaveStart, leaveEnd, () => {}, callback)\n}\n\nexport function transition(el, classesDuring, classesStart, classesEnd, hook1, hook2) {\n    el.classList.add(...classesStart)\n    el.classList.add(...classesDuring)\n\n    requestAnimationFrame(() => {\n        const duration = Number(getComputedStyle(el).transitionDuration.replace('s', '')) * 1000\n\n        hook1()\n\n        requestAnimationFrame(() => {\n            el.classList.remove(...classesStart)\n            el.classList.add(...classesEnd)\n\n            setTimeout(() => {\n                hook2()\n\n                // Adding an \"isConnected\" check, in case the callback\n                // removed the element from the DOM.\n                if (el.isConnected) {\n                    el.classList.remove(...classesDuring)\n                    el.classList.remove(...classesEnd)\n                }\n            }, duration);\n        })\n    });\n}\n","import { transitionIn, transitionOut, getXAttrs } from '../utils'\n\nexport function handleForDirective(component, el, expression, initialUpdate) {\n    const { single, bunch, iterator1, iterator2 } = parseFor(expression)\n\n    var items = component.evaluateReturnExpression(bunch)\n\n    // As we walk the array, we'll also walk the DOM (updating/creating as we go).\n    var previousEl = el\n    items.forEach((i, index, group) => {\n        const currentKey = getThisIterationsKeyFromTemplateTag(component, el, single, iterator1, iterator2, i, index, group)\n        let currentEl = previousEl.nextElementSibling\n\n        // Let's check and see if the x-for has already generated an element last time it ran.\n        if (currentEl && currentEl.__x_for_key !== undefined) {\n            // If the the key's don't match.\n            if (currentEl.__x_for_key !== currentKey) {\n                // We'll look ahead to see if we can find it further down.\n                var tmpCurrentEl = currentEl\n                while(tmpCurrentEl) {\n                    // If we found it later in the DOM.\n                    if (tmpCurrentEl.__x_for_key === currentKey) {\n                        // Move it to where it's supposed to be in the DOM.\n                        el.parentElement.insertBefore(tmpCurrentEl, currentEl)\n                        // And set it as the current element as if we just created it.\n                        currentEl = tmpCurrentEl\n                        break\n                    }\n\n                    tmpCurrentEl = (tmpCurrentEl.nextElementSibling && tmpCurrentEl.nextElementSibling.__x_for_key !== undefined) ? tmpCurrentEl.nextElementSibling : false\n                }\n            }\n\n            // Temporarily remove the key indicator to allow the normal \"updateElements\" to work\n            delete currentEl.__x_for_key\n\n            currentEl.__x_for_alias = single\n            currentEl.__x_for_value = i\n            component.updateElements(currentEl, () => {\n                return {[currentEl.__x_for_alias]: currentEl.__x_for_value}\n            })\n        } else {\n            // There are no more .__x_for_key elements, meaning the page is first loading, OR, there are\n            // extra items in the array that need to be added as new elements.\n\n            // Let's create a clone from the template.\n            const clone = document.importNode(el.content, true);\n            // Insert it where we are in the DOM.\n            el.parentElement.insertBefore(clone, currentEl)\n\n            // Set it as the current element.\n            currentEl = previousEl.nextElementSibling\n\n            // And transition it in if it's not the first page load.\n            transitionIn(currentEl, () => {}, initialUpdate)\n\n            // Now, let's walk the new DOM node and initialize everything,\n            // including new nested components.\n            // Note we are resolving the \"extraData\" alias stuff from the dom element value so that it's\n            // always up to date for listener handlers that don't get re-registered.\n            currentEl.__x_for_alias = single\n            currentEl.__x_for_value = i\n            component.initializeElements(currentEl, () => {\n                return {[currentEl.__x_for_alias]: currentEl.__x_for_value}\n            })\n        }\n\n        currentEl.__x_for_key = currentKey\n\n        previousEl = currentEl\n    })\n\n    // Now that we've added/updated/moved all the elements for the current state of the loop.\n    // Anything left over, we can get rid of.\n    var nextElementFromOldLoop = (previousEl.nextElementSibling && previousEl.nextElementSibling.__x_for_key !== undefined) ? previousEl.nextElementSibling : false\n\n    while(nextElementFromOldLoop) {\n        const nextElementFromOldLoopImmutable = nextElementFromOldLoop\n\n        transitionOut(nextElementFromOldLoop, () => {\n            nextElementFromOldLoopImmutable.remove()\n        })\n\n        nextElementFromOldLoop = (nextElementFromOldLoop.nextElementSibling && nextElementFromOldLoop.nextElementSibling.__x_for_key !== undefined) ? nextElementFromOldLoop.nextElementSibling : false\n    }\n}\n\n// This was taken from VueJS 2.* core. Thanks Vue!\nfunction parseFor (expression) {\n    const forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/\n    const stripParensRE = /^\\(|\\)$/g\n    const forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/\n\n    const inMatch = expression.match(forAliasRE)\n    if (! inMatch) return\n    const res = {}\n    res.bunch = inMatch[2].trim()\n    const single = inMatch[1].trim().replace(stripParensRE, '')\n    const iteratorMatch = single.match(forIteratorRE)\n    if (iteratorMatch) {\n        res.single = single.replace(forIteratorRE, '').trim()\n        res.iterator1 = iteratorMatch[1].trim()\n        if (iteratorMatch[2]) {\n            res.iterator2 = iteratorMatch[2].trim()\n        }\n    } else {\n        res.single = single\n    }\n    return res\n  }\n\nfunction getThisIterationsKeyFromTemplateTag(component, el, single, iterator1, iterator2, i, index, group) {\n    const keyAttr = getXAttrs(el, 'bind').filter(attr => attr.value === 'key')[0]\n\n    let keyAliases = { [single]: i }\n    if (iterator1) keyAliases[iterator1] = index\n    if (iterator2) keyAliases[iterator2] = group\n\n    return keyAttr\n        ? component.evaluateReturnExpression(keyAttr.expression, () => keyAliases)\n        : index\n}\n","import { arrayUnique } from '../utils'\n\nexport function handleAttributeBindingDirective(component, el, attrName, expression, extraVars) {\n    var value = component.evaluateReturnExpression(expression, extraVars)\n\n    if (attrName === 'value') {\n        if (el.type === 'radio') {\n            el.checked = el.value == value\n        } else if (el.type === 'checkbox') {\n            if (Array.isArray(value)) {\n                // I'm purposely not using Array.includes here because it's\n                // strict, and because of Numeric/String mis-casting, I\n                // want the \"includes\" to be \"fuzzy\".\n                let valueFound = false\n                value.forEach(val => {\n                    if (val == el.value) {\n                        valueFound = true\n                    }\n                })\n\n                el.checked = valueFound\n            } else {\n                el.checked = !! value\n            }\n        } else if (el.tagName === 'SELECT') {\n            updateSelect(el, value)\n        } else {\n            el.value = value\n        }\n    } else if (attrName === 'class') {\n        if (Array.isArray(value)) {\n            const originalClasses = el.__originalClasses || []\n            el.setAttribute('class', arrayUnique(originalClasses.concat(value)).join(' '))\n        } else if (typeof value === 'object') {\n            Object.keys(value).forEach(classNames => {\n                if (value[classNames]) {\n                    classNames.split(' ').forEach(className => el.classList.add(className))\n                } else {\n                    classNames.split(' ').forEach(className => el.classList.remove(className))\n                }\n            })\n        } else {\n            const originalClasses = el.__originalClasses || []\n            const newClasses = value.split(' ')\n            el.setAttribute('class', arrayUnique(originalClasses.concat(newClasses)).join(' '))\n        }\n    } else if (['disabled', 'readonly', 'required', 'checked', 'hidden'].includes(attrName)) {\n        // Boolean attributes have to be explicitly added and removed, not just set.\n        if (!! value) {\n            el.setAttribute(attrName, '')\n        } else {\n            el.removeAttribute(attrName)\n        }\n    } else {\n        el.setAttribute(attrName, value)\n    }\n}\n\nfunction updateSelect(el, value) {\n    const arrayWrappedValue = [].concat(value).map(value => { return value + '' })\n\n    Array.from(el.options).forEach(option => {\n        option.selected = arrayWrappedValue.includes(option.value || option.text)\n    })\n}\n","import { transitionIn, transitionOut } from '../utils'\n\nexport function handleIfDirective(el, expressionResult, initialUpdate) {\n    if (el.nodeName.toLowerCase() !== 'template') console.warn(`Alpine: [x-if] directive should only be added to <template> tags.`)\n\n    const elementHasAlreadyBeenAdded = el.nextElementSibling && el.nextElementSibling.__x_inserted_me === true\n\n    if (expressionResult && ! elementHasAlreadyBeenAdded) {\n        const clone = document.importNode(el.content, true);\n\n        el.parentElement.insertBefore(clone, el.nextElementSibling)\n\n        el.nextElementSibling.__x_inserted_me = true\n\n        transitionIn(el.nextElementSibling, () => {}, initialUpdate)\n    } else if (! expressionResult && elementHasAlreadyBeenAdded) {\n        transitionOut(el.nextElementSibling, () => {\n            el.nextElementSibling.remove()\n        }, initialUpdate)\n    }\n}\n","import { kebabCase } from '../utils'\n\nexport function registerListener(component, el, event, modifiers, expression, extraVars = {}) {\n    if (modifiers.includes('away')) {\n        const handler = e => {\n            // Don't do anything if the click came form the element or within it.\n            if (el.contains(e.target)) return\n\n            // Don't do anything if this element isn't currently visible.\n            if (el.offsetWidth < 1 && el.offsetHeight < 1) return\n\n            // Now that we are sure the element is visible, AND the click\n            // is from outside it, let's run the expression.\n            runListenerHandler(component, expression, e, extraVars)\n\n            if (modifiers.includes('once')) {\n                document.removeEventListener(event, handler)\n            }\n        }\n\n        // Listen for this event at the root level.\n        document.addEventListener(event, handler)\n    } else {\n        const listenerTarget = modifiers.includes('window')\n            ? window : (modifiers.includes('document') ? document : el)\n\n        const handler = e => {\n            if (isKeyEvent(event)) {\n                if (isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers)) {\n                    return\n                }\n            }\n\n            if (modifiers.includes('prevent')) e.preventDefault()\n            if (modifiers.includes('stop')) e.stopPropagation()\n\n            runListenerHandler(component, expression, e, extraVars)\n\n            if (modifiers.includes('once')) {\n                listenerTarget.removeEventListener(event, handler)\n            }\n        }\n\n        listenerTarget.addEventListener(event, handler)\n    }\n}\n\nfunction runListenerHandler(component, expression, e, extraVars) {\n    component.evaluateCommandExpression(expression, () => {\n        return {...extraVars(), '$event': e}\n    })\n}\n\nfunction isKeyEvent(event) {\n    return ['keydown', 'keyup'].includes(event)\n}\n\nfunction isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers) {\n    let keyModifiers = modifiers.filter(i => {\n        return ! ['window', 'document', 'prevent', 'stop'].includes(i)\n    })\n\n    // If no modifier is specified, we'll call it a press.\n    if (keyModifiers.length === 0) return false\n\n    // If one is passed, AND it matches the key pressed, we'll call it a press.\n    if (keyModifiers.length === 1 && keyModifiers[0] === keyToModifier(e.key)) return false\n\n    // The user is listening for key combinations.\n    const systemKeyModifiers = ['ctrl', 'shift', 'alt', 'meta', 'cmd', 'super']\n    const selectedSystemKeyModifiers = systemKeyModifiers.filter(modifier => keyModifiers.includes(modifier))\n\n    keyModifiers = keyModifiers.filter(i => ! selectedSystemKeyModifiers.includes(i))\n\n    if (selectedSystemKeyModifiers.length > 0) {\n        const activelyPressedKeyModifiers = selectedSystemKeyModifiers.filter(modifier => {\n            // Alias \"cmd\" and \"super\" to \"meta\"\n            if (modifier === 'cmd' || modifier === 'super') modifier = 'meta'\n\n            return e[`${modifier}Key`]\n        })\n\n        // If all the modifiers selected are pressed, ...\n        if (activelyPressedKeyModifiers.length === selectedSystemKeyModifiers.length) {\n            // AND the remaining key is pressed as well. It's a press.\n            if (keyModifiers[0] === keyToModifier(e.key)) return false\n        }\n    }\n\n    // We'll call it NOT a valid keypress.\n    return true\n}\n\nfunction keyToModifier(key) {\n    switch (key) {\n        case '/':\n            return 'slash'\n        case ' ':\n        case 'Spacebar':\n            return 'space'\n        default:\n            return kebabCase(key)\n    }\n}\n","import { registerListener } from './on'\n\nexport function registerModelListener(component, el, modifiers, expression, extraVars = {}) {\n    // If the element we are binding to is a select, a radio, or checkbox\n    // we'll listen for the change event instead of the \"input\" event.\n    var event = (el.tagName.toLowerCase() === 'select')\n        || ['checkbox', 'radio'].includes(el.type)\n        || modifiers.includes('lazy')\n        ? 'change' : 'input'\n\n    const listenerExpression = modelListenerExpression(component, el, modifiers, expression)\n\n    registerListener(component, el, event, modifiers, listenerExpression, extraVars)\n}\n\nfunction modelListenerExpression(component, el, modifiers, dataKey) {\n    var rightSideOfExpression = ''\n    if (el.type === 'checkbox') {\n        // If the data we are binding to is an array, toggle it's value inside the array.\n        if (Array.isArray(component.$data[dataKey])) {\n            rightSideOfExpression = `$event.target.checked ? ${dataKey}.concat([$event.target.value]) : ${dataKey}.filter(i => i !== $event.target.value)`\n        } else {\n            rightSideOfExpression = `$event.target.checked`\n        }\n    } else if (el.tagName.toLowerCase() === 'select' && el.multiple) {\n        rightSideOfExpression = modifiers.includes('number')\n            ? 'Array.from($event.target.selectedOptions).map(option => { return parseFloat(option.value || option.text) })'\n            : 'Array.from($event.target.selectedOptions).map(option => { return option.value || option.text })'\n    } else {\n        rightSideOfExpression = modifiers.includes('number')\n            ? 'parseFloat($event.target.value)'\n            : (modifiers.includes('trim') ? '$event.target.value.trim()' : '$event.target.value')\n    }\n\n    if (el.type === 'radio') {\n        // Radio buttons only work properly when they share a name attribute.\n        // People might assume we take care of that for them, because\n        // they already set a shared \"x-model\" attribute.\n        if (! el.hasAttribute('name')) el.setAttribute('name', dataKey)\n    }\n\n    return `${dataKey} = ${rightSideOfExpression}`\n}\n","import { walk, saferEval, saferEvalNoReturn, getXAttrs, debounce } from './utils'\nimport { handleForDirective } from './directives/for'\nimport { handleAttributeBindingDirective } from './directives/bind'\nimport { handleShowDirective } from './directives/show'\nimport { handleIfDirective } from './directives/if'\nimport { handleElseDirective } from './directives/else'\nimport { registerModelListener } from './directives/model'\nimport { registerListener } from './directives/on'\n\nexport default class Component {\n    constructor(el) {\n        this.$el = el\n\n        const dataAttr = this.$el.getAttribute('x-data')\n        const dataExpression = dataAttr === '' ? '{}' : dataAttr\n        const initExpression = this.$el.getAttribute('x-init')\n        const createdExpression = this.$el.getAttribute('x-created')\n        const mountedExpression = this.$el.getAttribute('x-mounted')\n\n        const unobservedData = saferEval(dataExpression, {})\n\n        // Construct a Proxy-based observable. This will be used to handle reactivity.\n        this.$data = this.wrapDataInObservable(unobservedData)\n\n        // After making user-supplied data methods reactive, we can now add\n        // our magic properties to the original data for access.\n        unobservedData.$el = this.$el\n        unobservedData.$refs = this.getRefsProxy()\n\n        this.nextTickStack = []\n        unobservedData.$nextTick = (callback) => {\n            this.nextTickStack.push(callback)\n        }\n\n        var initReturnedCallback\n        if (initExpression) {\n            // We want to allow data manipulation, but not trigger DOM updates just yet.\n            // We haven't even initialized the elements with their Alpine bindings. I mean c'mon.\n            this.pauseReactivity = true\n            initReturnedCallback = saferEval(this.$el.getAttribute('x-init'), this.$data)\n            this.pauseReactivity = false\n        }\n\n        if (createdExpression) {\n            console.warn('AlpineJS Warning: \"x-created\" is deprecated and will be removed in the next major version. Use \"x-init\" instead.')\n            this.pauseReactivity = true\n            saferEvalNoReturn(this.$el.getAttribute('x-created'), this.$data)\n            this.pauseReactivity = false\n        }\n\n        // Register all our listeners and set all our attribute bindings.\n        this.initializeElements(this.$el)\n\n        // Use mutation observer to detect new elements being added within this component at run-time.\n        // Alpine's just so darn flexible amirite?\n        this.listenForNewElementsToInitialize()\n\n        if (typeof initReturnedCallback === 'function') {\n            // Run the callback returned form the \"x-init\" hook to allow the user to do stuff after\n            // Alpine's got it's grubby little paws all over everything.\n            initReturnedCallback.call(this.$data)\n        }\n\n        if (mountedExpression) {\n            console.warn('AlpineJS Warning: \"x-mounted\" is deprecated and will be removed in the next major version. Use \"x-init\" (with a callback return) for the same behavior.')\n            // Run an \"x-mounted\" hook to allow the user to do stuff after\n            // Alpine's got it's grubby little paws all over everything.\n            saferEvalNoReturn(mountedExpression, this.$data)\n        }\n    }\n\n    wrapDataInObservable(data) {\n        var self = this\n\n        const proxyHandler = {\n            set(obj, property, value) {\n                const setWasSuccessful = Reflect.set(obj, property, value)\n\n                // Don't react to data changes for cases like the `x-created` hook.\n                if (self.pauseReactivity) return\n\n                debounce(() => {\n                    self.updateElements(self.$el)\n\n                    // Walk through the $nextTick stack and clear it as we go.\n                    while (self.nextTickStack.length > 0) {\n                        self.nextTickStack.shift()()\n                    }\n                }, 0)()\n\n                return setWasSuccessful\n            },\n            get(target, key) {\n                // If the property we are trying to get is a proxy, just return it.\n                // Like in the case of $refs\n                if (target[key] && target[key].isRefsProxy) return target[key]\n\n                // If property is a DOM node, just return it. (like in the case of this.$el)\n                if (target[key] && target[key] instanceof Node) return target[key]\n\n                // If accessing a nested property, retur this proxy recursively.\n                // This enables reactivity on setting nested data.\n                if (typeof target[key] === 'object' && target[key] !== null) {\n                    return new Proxy(target[key], proxyHandler)\n                }\n\n                // If none of the above, just return the flippin' value. Gawsh.\n                return target[key]\n            }\n        }\n\n        return new Proxy(data, proxyHandler)\n    }\n\n    walkAndSkipNestedComponents(el, callback, initializeComponentCallback = () => {}) {\n        walk(el, el => {\n            // We've hit a component.\n            if (el.hasAttribute('x-data')) {\n                // If it's not the current one.\n                if (! el.isSameNode(this.$el)) {\n                    // Initialize it if it's not.\n                    if (! el.__x) initializeComponentCallback(el)\n\n                    // Now we'll let that sub-component deal with itself.\n                    return false\n                }\n            }\n\n            return callback(el)\n        })\n    }\n\n    initializeElements(rootEl, extraVars = () => {}) {\n        this.walkAndSkipNestedComponents(rootEl, el => {\n            // Don't touch spawns from for loop\n            if (el.__x_for_key !== undefined) return false\n\n            this.initializeElement(el, extraVars)\n        }, el => {\n            el.__x = new Component(el)\n        })\n\n        // Walk through the $nextTick stack and clear it as we go.\n        while (this.nextTickStack.length > 0) {\n            this.nextTickStack.shift()()\n        }\n    }\n\n    initializeElement(el, extraVars) {\n        // To support class attribute merging, we have to know what the element's\n        // original class attribute looked like for reference.\n        if (el.hasAttribute('class') && getXAttrs(el).length > 0) {\n            el.__originalClasses = el.getAttribute('class').split(' ')\n        }\n\n        this.registerListeners(el, extraVars)\n        this.resolveBoundAttributes(el, true, extraVars)\n    }\n\n    updateElements(rootEl, extraVars = () => {}) {\n        this.walkAndSkipNestedComponents(rootEl, el => {\n            // Don't touch spawns from for loop (and check if the root is actually a for loop in a parent, don't skip it.)\n            if (el.__x_for_key !== undefined && ! el.isSameNode(this.$el)) return false\n\n            this.updateElement(el, extraVars)\n        }, el => {\n            el.__x = new Component(el)\n        })\n    }\n\n    updateElement(el, extraVars) {\n        this.resolveBoundAttributes(el, false, extraVars)\n    }\n\n    registerListeners(el, extraVars) {\n        getXAttrs(el).forEach(({ type, value, modifiers, expression }) => {\n            switch (type) {\n                case 'on':\n                    registerListener(this, el, value, modifiers, expression, extraVars)\n                    break;\n\n                case 'model':\n                    registerModelListener(this, el, modifiers, expression, extraVars)\n                    break;\n                default:\n                    break;\n            }\n        })\n    }\n\n    resolveBoundAttributes(el, initialUpdate = false, extraVars) {\n        getXAttrs(el).forEach(({ type, value, modifiers, expression }) => {\n            switch (type) {\n                case 'model':\n                    handleAttributeBindingDirective(this, el, 'value', expression, extraVars)\n                    break;\n\n                case 'bind':\n                    // The :key binding on an x-for is special, ignore it.\n                    if (el.tagName.toLowerCase() === 'template' && value === 'key') return\n\n                    handleAttributeBindingDirective(this, el, value, expression, extraVars)\n                    break;\n\n                case 'text':\n                    el.innerText = this.evaluateReturnExpression(expression, extraVars)\n                    break;\n\n                case 'html':\n                    el.innerHTML = this.evaluateReturnExpression(expression, extraVars)\n                    break;\n\n                case 'show':\n                    var output = this.evaluateReturnExpression(expression, extraVars)\n\n                    handleShowDirective(el, output, initialUpdate)\n                    break;\n\n                case 'if':\n                    var output = this.evaluateReturnExpression(expression, extraVars)\n\n                    handleIfDirective(el, output, initialUpdate)\n                    break;\n\n                case 'else':\n                    handleElseDirective(el)\n                    break;\n\n                case 'for':\n                    handleForDirective(this, el, expression, initialUpdate)\n                    break;\n\n                case 'cloak':\n                    el.removeAttribute('x-cloak')\n                    break;\n\n                default:\n                    break;\n            }\n        })\n    }\n\n    evaluateReturnExpression(expression, extraVars = () => {}) {\n        return saferEval(expression, this.$data, extraVars())\n    }\n\n    evaluateCommandExpression(expression, extraVars = () => {}) {\n        saferEvalNoReturn(expression, this.$data, extraVars())\n    }\n\n    listenForNewElementsToInitialize() {\n        const targetNode = this.$el\n\n        const observerOptions = {\n            childList: true,\n            attributes: true,\n            subtree: true,\n        }\n\n        const observer = new MutationObserver((mutations) => {\n            for (let i=0; i < mutations.length; i++){\n                // Filter out mutations triggered from child components.\n                if (! mutations[i].target.closest('[x-data]').isSameNode(this.$el)) return\n\n                if (mutations[i].type === 'attributes' && mutations[i].attributeName === 'x-data') {\n                    const rawData = saferEval(mutations[i].target.getAttribute('x-data'), {})\n\n                    Object.keys(rawData).forEach(key => {\n                        if (this.$data[key] !== rawData[key]) {\n                            this.$data[key] = rawData[key]\n                        }\n                    })\n                }\n\n                if (mutations[i].addedNodes.length > 0) {\n                    mutations[i].addedNodes.forEach(node => {\n                        if (node.nodeType !== 1) return\n\n                        if (node.matches('[x-data]')) {\n                            node.__x = new Component(node)\n                            return\n                        }\n\n                        this.initializeElements(node)\n                    })\n                }\n              }\n        })\n\n        observer.observe(targetNode, observerOptions);\n    }\n\n    getRefsProxy() {\n        var self = this\n\n        // One of the goals of this is to not hold elements in memory, but rather re-evaluate\n        // the DOM when the system needs something from it. This way, the framework is flexible and\n        // friendly to outside DOM changes from libraries like Vue/Livewire.\n        // For this reason, I'm using an \"on-demand\" proxy to fake a \"$refs\" object.\n        return new Proxy({}, {\n            get(object, property) {\n                if (property === 'isRefsProxy') return true\n\n                var ref\n\n                // We can't just query the DOM because it's hard to filter out refs in\n                // nested components.\n                self.walkAndSkipNestedComponents(self.$el, el => {\n                    if (el.hasAttribute('x-ref') && el.getAttribute('x-ref') === property) {\n                        ref = el\n                    }\n                })\n\n                return ref\n            }\n        })\n    }\n}\n","import { transitionIn, transitionOut } from '../utils'\n\nexport function handleShowDirective(el, value, initialUpdate = false) {\n    if (! value) {\n        transitionOut(el, () => {\n            el.style.display = 'none'\n        }, initialUpdate)\n    } else {\n        transitionIn(el, () => {\n            if (el.style.length === 1 && el.style.display !== '') {\n                el.removeAttribute('style')\n            } else {\n                el.style.removeProperty('display')\n            }\n        }, initialUpdate)\n    }\n}\n","import { handleIfDirective } from './if'\n\nexport function handleElseDirective(el) {\n    let show = true\n\n    if (!el.previousElementSibling) {\n        console.warn('AlpineJS Warning: Cannot use [x-else] if there was no previous sibling')\n        show = false\n    }\n    else if (el.previousElementSibling.__x_inserted_me) {\n        // Previous sibling appears to have been shown so do not show this else block.\n        show = false\n    }\n    else if (el.previousElementSibling.nodeName.toLowerCase() !== 'template'\n        || !el.previousElementSibling.hasAttribute('x-if')) {\n        console.warn('AlpineJS Warning: Cannot use [x-else] if previous element was not a <template> element with \"x-if\" attribute')\n        show = false\n    }\n\n    // Run regular x-if directive to show/hide tag:\n    handleIfDirective(el, show)\n}\n","import Component from './component'\nimport { domReady, isTesting } from './utils'\n\nconst Alpine = {\n    start: async function () {\n        if (! isTesting()) {\n            await domReady()\n        }\n\n        this.discoverComponents(el => {\n            this.initializeComponent(el)\n        })\n\n        // It's easier and more performant to just support Turbolinks than listen\n        // to MutationOberserver mutations at the document level.\n        document.addEventListener(\"turbolinks:load\", () => {\n            this.discoverUninitializedComponents(el => {\n                this.initializeComponent(el)\n            })\n        })\n\n        this.listenForNewUninitializedComponentsAtRunTime(el => {\n            this.initializeComponent(el)\n        })\n    },\n\n    discoverComponents: function (callback) {\n        const rootEls = document.querySelectorAll('[x-data]');\n\n        rootEls.forEach(rootEl => {\n            callback(rootEl)\n        })\n    },\n\n    discoverUninitializedComponents: function (callback, el = null) {\n        const rootEls = (el || document).querySelectorAll('[x-data]');\n\n        Array.from(rootEls)\n            .filter(el => el.__x === undefined)\n            .forEach(rootEl => {\n                callback(rootEl)\n            })\n    },\n\n    listenForNewUninitializedComponentsAtRunTime: function (callback) {\n        const targetNode = document.querySelector('body');\n\n        const observerOptions = {\n            childList: true,\n            attributes: true,\n            subtree: true,\n        }\n\n        const observer = new MutationObserver((mutations) => {\n            for (let i=0; i < mutations.length; i++){\n                if (mutations[i].addedNodes.length > 0) {\n                    mutations[i].addedNodes.forEach(node => {\n                        // Discard non-element nodes (like line-breaks)\n                        if (node.nodeType !== 1) return\n\n                        // Discard any changes happening within an existing component.\n                        // They will take care of themselves.\n                        if (node.parentElement.closest('[x-data]')) return\n\n                        this.discoverUninitializedComponents((el) => {\n                            this.initializeComponent(el)\n                        }, node.parentElement)\n                    })\n                }\n              }\n        })\n\n        observer.observe(targetNode, observerOptions)\n    },\n\n    initializeComponent: function (el) {\n        el.__x = new Component(el)\n    }\n}\n\nif (! isTesting()) {\n    window.Alpine = Alpine\n    window.Alpine.start()\n}\n\nexport default Alpine\n"],"names":["arrayUnique","array","a","concat","i","length","j","splice","isTesting","navigator","userAgent","includes","saferEval","expression","dataContext","additionalHelperVariables","Function","Object","keys","values","saferEvalNoReturn","isXAttr","attr","name","replaceAtAndColonWithStandardSyntax","test","getXAttrs","el","type","Array","from","attributes","filter","map","typeMatch","match","valueMatch","modifiers","value","replace","startsWith","transitionIn","callback","forceSkip","attrs","transition","find","split","transitionOut","classesDuring","classesStart","classesEnd","hook1","hook2","classList","add","requestAnimationFrame","duration","Number","getComputedStyle","transitionDuration","remove","setTimeout","isConnected","handleForDirective","component","initialUpdate","single","bunch","iterator1","iterator2","forIteratorRE","inMatch","res","trim","iteratorMatch","parseFor","items","evaluateReturnExpression","previousEl","forEach","index","group","currentKey","keyAttr","keyAliases","getThisIterationsKeyFromTemplateTag","currentEl","nextElementSibling","undefined","__x_for_key","tmpCurrentEl","parentElement","insertBefore","__x_for_alias","__x_for_value","updateElements","clone","document","importNode","content","initializeElements","nextElementFromOldLoop","nextElementFromOldLoopImmutable","handleAttributeBindingDirective","attrName","extraVars","checked","isArray","valueFound","val","tagName","arrayWrappedValue","options","option","selected","text","updateSelect","originalClasses","__originalClasses","setAttribute","join","classNames","className","newClasses","removeAttribute","handleIfDirective","expressionResult","nodeName","toLowerCase","console","warn","elementHasAlreadyBeenAdded","__x_inserted_me","registerListener","event","handler","e","contains","target","offsetWidth","offsetHeight","runListenerHandler","removeEventListener","addEventListener","listenerTarget","window","isKeyEvent","keyModifiers","keyToModifier","key","selectedSystemKeyModifiers","modifier","isListeningForASpecificKeyThatHasntBeenPressed","preventDefault","stopPropagation","evaluateCommandExpression","registerModelListener","listenerExpression","dataKey","rightSideOfExpression","$data","multiple","hasAttribute","modelListenerExpression","Component","constructor","$el","dataAttr","this","getAttribute","dataExpression","initExpression","createdExpression","mountedExpression","unobservedData","initReturnedCallback","wrapDataInObservable","$refs","getRefsProxy","nextTickStack","$nextTick","push","pauseReactivity","listenForNewElementsToInitialize","call","data","self","proxyHandler","set","obj","property","setWasSuccessful","Reflect","func","wait","timeout","shift","context","args","arguments","later","apply","clearTimeout","get","isRefsProxy","Node","Proxy","walkAndSkipNestedComponents","initializeComponentCallback","walk","node","firstElementChild","isSameNode","__x","rootEl","initializeElement","registerListeners","resolveBoundAttributes","updateElement","innerText","innerHTML","output","style","display","removeProperty","handleShowDirective","show","previousElementSibling","handleElseDirective","targetNode","MutationObserver","mutations","closest","attributeName","rawData","addedNodes","nodeType","matches","observe","childList","subtree","object","ref","Alpine","start","async","Promise","resolve","readyState","discoverComponents","initializeComponent","discoverUninitializedComponents","listenForNewUninitializedComponentsAtRunTime","querySelectorAll","rootEls","querySelector"],"mappings":"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"}